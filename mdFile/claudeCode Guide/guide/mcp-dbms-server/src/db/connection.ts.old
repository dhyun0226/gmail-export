import mysql from 'mysql2/promise';
import { dbConfig } from '../config/index.js';
import { logger } from '../utils/logger.js';
import { DatabaseConnectionError } from '../utils/errors.js';

let pool: mysql.Pool | null = null;

// 데이터베이스 연결 풀 초기화
export async function initializeDatabase(): Promise<void> {
  try {
    pool = mysql.createPool(dbConfig);
    
    // 연결 테스트
    const connection = await pool.getConnection();
    await connection.ping();
    connection.release();
    
    logger.info('데이터베이스 연결 풀 생성 완료');
  } catch (error) {
    logger.error('데이터베이스 연결 실패:', error);
    throw new DatabaseConnectionError(
      `데이터베이스 연결 실패: ${error instanceof Error ? error.message : '알 수 없는 오류'}`
    );
  }
}

// 연결 풀 가져오기
export function getPool(): mysql.Pool {
  if (!pool) {
    throw new DatabaseConnectionError('데이터베이스 연결 풀이 초기화되지 않았습니다');
  }
  return pool;
}

// 연결 가져오기
export async function getConnection(): Promise<mysql.PoolConnection> {
  const pool = getPool();
  try {
    return await pool.getConnection();
  } catch (error) {
    logger.error('데이터베이스 연결 획득 실패:', error);
    throw new DatabaseConnectionError(
      `연결 획득 실패: ${error instanceof Error ? error.message : '알 수 없는 오류'}`
    );
  }
}

// 트랜잭션 실행 헬퍼
export async function executeTransaction<T>(
  callback: (connection: mysql.PoolConnection) => Promise<T>
): Promise<T> {
  const connection = await getConnection();
  try {
    await connection.beginTransaction();
    const result = await callback(connection);
    await connection.commit();
    return result;
  } catch (error) {
    await connection.rollback();
    throw error;
  } finally {
    connection.release();
  }
}

// 단일 쿼리 실행 헬퍼
export async function executeQuery<T = any>(
  sql: string,
  params?: any[]
): Promise<T[]> {
  const connection = await getConnection();
  try {
    const [rows] = await connection.execute(sql, params);
    return rows as T[];
  } finally {
    connection.release();
  }
}

// 연결 풀 종료
export async function closeDatabase(): Promise<void> {
  if (pool) {
    await pool.end();
    pool = null;
    logger.info('데이터베이스 연결 풀 종료');
  }
}